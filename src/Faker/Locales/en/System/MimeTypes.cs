using System;
using System.Collections.Generic;
namespace Faker.Locales
{
    public partial class System
    {
        public List<dynamic> MimeTypes = new List<dynamic>()
        {
            new { type = "application/andrew-inset", source = "iana", extensions = new List<string>() { "ez" } },
            new { type = "application/applixware", source = "iana", extensions = new List<string>() { "aw" } },
            new { type = "application/atom+xml", source = "iana", compressible = true, extensions = new List<string>() { "atom" } },
            new { type = "application/atomcat+xml", source = "iana", extensions = new List<string>() { "atomcat" } },
            new { type = "application/atomsvc+xml", source = "iana", extensions = new List<string>() { "atomsvc" } },
            new { type = "application/ccxml+xml", source = "iana", extensions = new List<string>() { "ccxml" } },
            new { type = "application/cdmi-capability", source = "iana", extensions = new List<string>() { "cdmia" } },
            new { type = "application/cdmi-container", source = "iana", extensions = new List<string>() { "cdmic" } },
            new { type = "application/cdmi-domain", source = "iana", extensions = new List<string>() { "cdmid" } },
            new { type = "application/cdmi-object", source = "iana", extensions = new List<string>() { "cdmio" } },
            new { type = "application/cdmi-queue", source = "iana", extensions = new List<string>() { "cdmiq" } },
            new { type = "application/cu-seeme", source = "apache", extensions = new List<string>() { "cu" } },
            new { type = "application/davmount+xml", source = "iana", extensions = new List<string>() { "davmount" } },
            new { type = "application/docbook+xml", source = "iana", extensions = new List<string>() { "dbk" } },
            new { type = "application/dssc+der", source = "iana", extensions = new List<string>() { "dssc" } },
            new { type = "application/dssc+xml", source = "iana", extensions = new List<string>() { "xdssc" } },
            new { type = "application/ecmascript", source = "iana", compressible = true, extensions = new List<string>() { "ecma" } },
            new { type = "application/emma+xml", source = "iana", extensions = new List<string>() { "emma" } },
            new { type = "application/epub+zip", source = "iana", compressible = false, extensions = new List<string>() { "epub" } },
            new { type = "application/exi", source = "iana", extensions = new List<string>() { "exi" } },
            new { type = "application/font-tdpfr", source = "iana", extensions = new List<string>() { "pfr" } },
            new { type = "application/hyperstudio", source = "iana", extensions = new List<string>() { "stk" } },
            new { type = "application/inkml+xml", source = "iana", extensions = new List<string>() { "ink", "inkml" } },
            new { type = "application/ipfix", source = "iana", extensions = new List<string>() { "ipfix" } },
            new { type = "application/java-archive", source = "apache", compressible = false, extensions = new List<string>() { "jar", "war", "ear" } },
            new { type = "application/java-serialized-object", source = "apache", extensions = new List<string>() { "ser" } },
            new { type = "application/java-vm", source = "apache", extensions = new List<string>() { "class" } },
            new { type = "application/javascript", source = "iana", compressible = true, extensions = new List<string>() { "js" } },
            new { type = "application/json", source = "iana", compressible = true, extensions = new List<string>() { "json" } },
            new { type = "application/json5", compressible = true },
            new { type = "application/jsonml+json", source = "iana", compressible = true, extensions = new List<string>() { "jsonml" } },
            new { type = "application/lost+xml", source = "iana", extensions = new List<string>() { "lostxml" } },
            new { type = "application/mac-binhex40", source = "iana", extensions = new List<string>() { "hqx" } },
            new { type = "application/mac-compactpro", source = "iana", extensions = new List<string>() { "cpt" } },
            new { type = "application/mads+xml", source = "iana", extensions = new List <string>() { "mads" } },
            new { type = "application/manifest+json", compressible = true, extensions = new List<string>() { "webmanifest" } },
            new { type = "application/marc", source = "iana", extensions = new List<string>() { "mrc" } },
            new { type = "application/marcxml+xml", source = "iana", extensions = new List<string>() { "mrcx" } },
            new { type = "application/mathematica", source = "iana", extensions = new List<string>() { "ma", "nb", "mb" } },
            new { type = "application/mathml+xml", source = "iana", extensions = new List<string>() { "mathml" } },
            new { type = "application/mbox", source = "iana", extensions = new List<string>() { "mbox" } },
            new { type = "application/mediaservercontrol+xml", source = "iana", extensions = new List<string>() { "mscml" } },
            new { type = "application/metalink+xml", source = "iana", extensions = new List<string>() { "metalink" } },
            new { type = "application/metalink4+xml", source = "iana", extensions = new List<string>() { "meta4" } },
            new { type = "application/mets+xml", source = "iana", extensions = new List<string>() { "mets" } },
            new { type = "application/mods+xml", source = "iana", extensions = new List<string>() { "mods" } },
            new { type = "application/mp21", source = "iana", extensions = new List<string>() { "m21", "mp21" } },
            new { type = "application/mp4", source = "iana", compressible = false, extensions = new List<string>() { "mp4s", "m4p" } },
            new { type = "application/msword", source = "iana", compressible = false, extensions = new List<string>() { "doc", "dot" } },
            new { type = "application/mxf", source = "iana", extensions = new List<string>() { "mxf" } },
            new { type = "application/octet-stream", source = "iana", compressible = false, extensions = new List<string>() { "bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "buffer" } },
            new { type = "application/oda", source = "iana", extensions = new List <string>() { "oda" } },
            new { type = "application/oebps-package+xml", source = "iana", extensions = new List<string>() { "opf" } },
            new { type = "application/ogg", source = "iana", compressible = false, extensions = new List<string>() { "ogx" } },
            new { type = "application/omdoc+xml", source = "iana", extensions = new List<string>() { "omdoc" } },
            new { type = "application/onenote", source = "apache", extensions = new List<string>() { "onetoc", "onetoc2", "onetmp", "onepkg" } },
            new { type = "application/oxps", source = "iana", extensions = new List<string>() { "oxps" } },
            new { type = "application/patch-ops-error+xml", source = "iana", extensions = new List<string>() { "xer" } },
            new { type = "application/pdf", source = "iana", compressible = false, extensions = new List<string>() { "pdf" } },
            new { type = "application/pgp-encrypted", source = "iana", extensions = new List<string>() { "pgp" } },
            new { type = "application/pgp-signature", source = "apache", extensions = new List<string>() { "asc", "sig" } },
            new { type = "application/pics-rules", source = "iana", extensions = new List<string>() { "prf" } },
            new { type = "application/pkcs10", source = "iana", extensions = new List<string>() { "p10" } },
            new { type = "application/pkcs7-mime", source = "iana", extensions = new List<string>() { "p7m", "p7c" } },
            new { type = "application/pkcs7-signature", source = "iana", extensions = new List<string>() { "p7s" } },
            new { type = "application/pkcs8", source = "iana", extensions = new List<string>() { "p8" } },
            new { type = "application/pkix-attr-cert", source = "iana", extensions = new List<string>() { "ac" } },
            new { type = "application/pkix-cert", source = "iana", extensions = new List<string>() { "cer" } },
        };
    }
}